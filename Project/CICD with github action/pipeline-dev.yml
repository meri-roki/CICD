name: Build and deploy project to AKS

on:
  push:
    branches: ["dev"]
  

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get current version
        id: get_version
        run: |
          echo "::set-output name=VERSION::$(cat version)"
      - name: Create new version tag
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v${{ steps.get_version.outputs.VERSION }}"
          git push origin "v${{ steps.get_version.outputs.VERSION }}"
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            crwepaplatform01.azurecr.io/${{ secrets.CONTAINER_NAME }}
          tags: |
            type=semver,pattern={{version}}
      - name: Build & Push image
        uses: azure/docker-login@v1
        with:
          login-server: *****.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |   
          docker build . -t *****.azurecr.io/${{ secrets.CONTAINER_NAME }}:${{ github.sha }}
          docker push *****.azurecr.io/${{ secrets.CONTAINER_NAME }}:${{ github.sha }}
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1.4.6
        with:
          creds: '{"clientId":"${{ secrets.AZURE_ID }}","clientSecret":"${{ secrets.AZURE_SECRET_ID }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Set AKS context
        run: |
          az aks get-credentials --resource-group cline --name aks
      - name: Deploy Helm chart
        run: |
          helm upgrade --install client-dev ./helm -f ./helm/values-dev.yaml --namespace apps --set image.tag=${{ github.sha }}